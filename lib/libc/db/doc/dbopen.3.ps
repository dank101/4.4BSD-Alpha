%!PS-Adobe-
%%Creator: groff version 1.03
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.03 0
%%Pages: 4
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.03 0

/setpacking where {
	pop
	currentpacking
	true setpacking
} if

/grops 120 dict dup begin 

% The ASCII code of the space character.
/SC 32 def

/A /show load def
/B { 0 SC 3 -1 roll widthshow } bind def
/C { 0 exch ashow } bind def
/D { 0 exch 0 SC 5 2 roll awidthshow } bind def
/E { 0 rmoveto show } bind def
/F { 0 rmoveto 0 SC 3 -1 roll widthshow } bind def
/G { 0 rmoveto 0 exch ashow } bind def
/H { 0 rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/I { 0 exch rmoveto show } bind def
/J { 0 exch rmoveto 0 SC 3 -1 roll widthshow } bind def
/K { 0 exch rmoveto 0 exch ashow } bind def
/L { 0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/M { rmoveto show } bind def
/N { rmoveto 0 SC 3 -1 roll widthshow } bind def
/O { rmoveto 0 exch ashow } bind def
/P { rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/Q { moveto show } bind def 
/R { moveto 0 SC 3 -1 roll widthshow } bind def
/S { moveto 0 exch ashow } bind def
/T { moveto 0 exch 0 SC 5 2 roll awidthshow } bind def

% name size font SF -

/SF {
	findfont exch
	[ exch dup 0 exch 0 exch neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

% name a c d font MF -

/MF {
	findfont
	[ 5 2 roll
	0 3 1 roll % b
	neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def

% BP -

/BP {
	/level0 save def
	1 setlinecap
	1 setlinejoin
	72 RES div dup scale
	LS {
		90 rotate
	} {
		0 PL translate
	} ifelse
	1 -1 scale
} bind def

/EP {
	level0 restore
	showpage
} bind def


% centerx centery radius startangle endangle DA -

/DA {
	newpath arcn stroke
} bind def

% x y SN - x' y'
% round a position to nearest (pixel + (.25,.25))

/SN {
	transform 
	.25 sub exch .25 sub exch
	round .25 add exch round .25 add exch
	itransform
} bind def
	
% endx endy startx starty DL -
% we round the endpoints of the line, so that parallel horizontal
% and vertical lines will appear even

/DL {
	SN
	moveto
	SN
	lineto stroke
} bind def

% centerx centery radius DC -

/DC {
	newpath 0 360 arc closepath
} bind def


/TM matrix def

%  width height centerx centery DE -

/DE {
	TM currentmatrix pop
	translate scale newpath 0 0 .5 0 360 arc closepath
	TM setmatrix
} bind def

% these are for splines

/RC /rcurveto load def
/RL /rlineto load def
/ST /stroke load def
/MT /moveto load def
/CL /closepath load def

% fill the last path

% amount FL -

/FL {
	currentgray exch setgray fill setgray
} bind def

% fill with the ``current color''

/BL /fill load def

/LW /setlinewidth load def
% new_font_name encoding_vector old_font_name RE -

/RE {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def

/DEFS 0 def

% hpos vpos EBEGIN -

/EBEGIN {
	moveto
	DEFS begin
} bind def

/EEND /end load def

/CNT 0 def
/level1 0 def

% llx lly newwid wid newht ht newllx newlly PBEGIN -

/PBEGIN {
	/level1 save def
	translate
	div 3 1 roll div exch scale
	neg exch neg exch translate
	% set the graphics state to default values
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {
		pop
		false setstrokeadjust
	} if
	/setoverprint where {
		pop
		false setoverprint
	} if
	newpath
	/CNT countdictstack def
	/showpage {} def
} bind def

/PEND {
	clear
	countdictstack CNT sub { end } repeat
	level1 restore
} bind def

end def

/setpacking where {
	pop
	setpacking
} if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron/zcaron
/Ydieresis/trademark/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam
/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J
/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z
/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl/endash
/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut/dotaccent/breve
/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash/quotedblbase/OE/Lslash
/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis
/copyright/ordfeminine/guilsinglleft/logicalnot/minus/registered/macron/degree
/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth
/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex
/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn
/ydieresis]def/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold
RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 169.84(DBOPEN\(3\) 1991 DBOPEN\(3\))72 48 R/F1 9
/Times-Bold@0 SF(NAME)72 84 Q F0(dbopen \255 database access methods)108 96 Q
F1(SYNOPSIS)72 112.8 Q/F2 10/Times-Bold@0 SF(#include <sys/types.h>)108 124.8 Q
(#include <limits.h>)108 136.8 Q(#include <db.h>)108 148.8 Q(DB *)108 172.8 Q
(dbopen\(const char *\214le, int \215ags, int mode, DBTYPE type,)108 184.8 Q
(const void *openinfo\);)158 196.8 Q F1(DESCRIPTION)72 213.6 Q/F3 10
/Times-Italic@0 SF(Dbopen)108 225.6 Q F0 .948
(is the library interface to database \214les.)3.448 F .947
(The supported \214le formats are btree, hashed and record)5.948 F 2.82
(oriented. The)108 237.6 R .32
(btree format is a representation of a sorted, balanced tree structure.)2.82 F
.321(The hashed format is an)5.321 F .389(extensible, dynamic hashing scheme.)
108 249.6 R .389(The \215at-\214le format is a byte stream \214le with \214xed\
 or variable length)5.389 F 2.88(records. The)108 261.6 R .38(formats and \214\
le format speci\214c information are described in detail in their respective m\
anual)2.88 F(pages)108 273.6 Q F3(btr)2.5 E(ee)-.37 E F0(\(3\),).18 E F3(hash)
2.5 E F0(\(3\) and).23 E F3 -.37(re)2.5 G(cno).37 E F0(\(3\).).17 E .401
(Dbopen opens)108 290.4 R F3(\214le)2.901 E F0 .401
(for reading and/or writing.)2.901 F .4
(Files never intended to be preserved on disk may be created)5.401 F
(by setting the \214le parameter to NULL.)108 302.4 Q(The)108 319.2 Q F3
(\215ags)4.613 E F0(and)4.613 E F3 2.113(mode ar)4.613 F(guments)-.37 E F0
2.113(are as speci\214ed to the)4.613 F F3(open)4.613 E F0 2.114
(\(2\) routine, however).21 F 4.614(,o)-.4 G 2.114(nly the O_CREA)460.122 319.2
R -.74(T,)-1.11 G(O_EXCL, O_RDONL)108 331.2 Q 2.58 -1.29(Y, O)-1 H
(_RDWR, O_TRUNC and O_WRONL)1.29 E 2.5<598d>-1 G(ags are meaningful.)383.85
331.2 Q(The)108 348 Q F3(type)5.315 E F0(ar)5.315 E 2.815(gument is of type DB\
TYPE \(as de\214ned in the <db.h> include \214le\) and may be set to)-.18 F
(DB_BTREE, DB_HASH or DB_RECNO.)108 360 Q(The)108 376.8 Q F3(openinfo)2.849 E
F0(ar)2.849 E .349(gument is a pointer to an access method speci\214c structur\
e described in the access method')-.18 F(s)-.55 E .025(manual page.)108 388.8 R
(If)5.025 E F3(openinfo)2.525 E F0 .025(is NULL, each access method will use d\
efaults appropriate for the system and the)2.525 F(access method.)108 400.8 Q
F3(Dbopen)108 417.6 Q F0 .416
(returns a pointer to a DB structure on success and NULL on error)2.916 F 5.417
(.T)-.55 G .417(he DB structure is de\214ned in)423.205 417.6 R
(the <db.h> include \214le, and contains at least the following \214elds:)108
429.6 Q(typedef struct {)108 453.6 Q(DBTYPE type;)144 465.6 Q
(int \(*close\)\(const DB *db\);)144 477.6 Q
(int \(*del\)\(const DB *db, const DBT *key)144 489.6 Q 2.5(,u)-.65 G
(_int \215ags\);)319.17 489.6 Q(int \(*get\)\(const DB *db, DBT *key)144 501.6
Q 2.5(,D)-.65 G(BT *data, u_int \215ags\);)297.78 501.6 Q
(int \(*put\)\(const DB *db, const DBT *key)144 513.6 Q 2.5(,c)-.65 G
(onst DBT *data,)319.17 513.6 Q(u_int \215ags\);)194 525.6 Q
(int \(*sync\)\(const DB *db\);)144 537.6 Q
(int \(*seq\)\(const DB *db, DBT *key)144 549.6 Q 2.5(,D)-.65 G
(BT *data, u_int \215ags\);)298.89 549.6 Q 2.5(}D)108 561.6 S(B;)122.52 561.6 Q
.686(These elements a database type and a set of functions performing various \
actions.)108 578.4 R .686(These functions take a)5.686 F .142
(pointer to a structure as returned by)108 590.4 R F3(dbopen)2.642 E F0 2.642
(,a).21 G .143(nd sometimes one or more pointers to key/data structures and)
292.916 590.4 R 2.5<618d>108 602.4 S(ag value.)120.5 602.4 Q 16.28(type The)108
619.2 R(type of the underlying access method \(and \214le format\).)2.5 E 12.95
(close A)108 636 R .97(pointer to a routine to \215ush any cached information \
to disk, free any allocated resources, and)3.47 F .089
(close the underlying \214le\(s\).)144 648 R .089
(Since key/data pairs may be cached in memory)5.089 F 2.59(,f)-.65 G .09
(ailing to sync the \214le)455.75 648 R .495(with a)144 660 R F3(close)2.995 E
F0(or)2.995 E F3(sync)2.995 E F0 .495
(function may result in inconsistent or lost information.)2.995 F F3(Close)
5.494 E F0 .494(routines return)2.994 F(-1 on error \(setting)144 672 Q F3
(errno)2.5 E F0 2.5(\)a).17 G(nd 0 on success.)254.42 672 Q 21.28(del A)108
688.8 R(pointer to a routine to remove key/data pairs from the database.)2.5 E
(The parameter)144 705.6 Q F3(\215ag)2.5 E F0
(may be set to the following value:)2.5 E 197.615(12, September)72 768 R(1)535
768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 169.84(DBOPEN\(3\) 1991 DBOPEN\(3\))72 48 R(R_CURSOR)
144 84 Q(Delete the record referenced by the cursor)180 96 Q(.)-.55 E/F1 10
/Times-Italic@0 SF(Delete)144 112.8 Q F0 .004
(routines return -1 on error \(setting)2.504 F F1(errno)2.504 E F0 .004
(\), 0 on success, and 1 if the speci\214ed).17 F F1(key)2.505 E F0 .005
(was not in)2.505 F(the \214le.)144 124.8 Q 21.28(get A)108 141.6 R 1.006(poin\
ter to a routine which is the interface for keyed retrieval from the database.)
3.507 F 1.006(The address)6.006 F .417
(and length of the data associated with the speci\214ed)144 153.6 R F1(key)
2.917 E F0 .417(are returned in the structure referenced by)2.917 F F1(data)144
165.6 Q F0(.).24 E F1(Get)5.478 E F0 .478
(routines return -1 on error \(setting)2.978 F F1(errno)2.978 E F0 .477
(\), 0 on success, and 1 if the).17 F F1(key)2.977 E F0 .477(was not in the)
2.977 F(\214le.)144 177.6 Q 20.72(put A)108 194.4 R
(pointer to a routine to store key/data pairs in the database.)2.5 E
(The parameter)144 211.2 Q F1(\215ag)2.5 E F0
(may be set to one of the following values:)2.5 E(R_APPEND)144 228 Q 2.485
(Append the data to the tree, creating a new key/data pair)180 240 R 7.485(.\()
-.55 G 2.485(Applicable only to the)443.385 240 R(DB_RECNO access method.\))180
252 Q(R_CURSOR)144 268.8 Q(Replace the key/data pair referenced by the cursor)
180 280.8 Q(.)-.55 E(R_IAFTER)144 297.6 Q 1.1
(Append the data immediately after the data referenced by)180 309.6 R F1(key)
3.6 E F0 3.6(,c).26 G 1.1(reating a new key/data)446.45 309.6 R(pair)180 321.6
Q 5(.\()-.55 G(Applicable only to the DB_RECNO access method.\))205.83 321.6 Q
(R_IBEFORE)144 338.4 Q 1.228
(Insert the data immediately before the data referenced by)180 350.4 R F1(key)
3.729 E F0 3.729(,c).26 G 1.229(reating a new key/data)446.063 350.4 R(pair)180
362.4 Q 5(.\()-.55 G(Applicable only to the DB_RECNO access method.\))205.83
362.4 Q(R_NOOVER)144 379.2 Q(WRITE)-.55 E
(Enter the new key/data pair only if the key does not previously exist.)180
391.2 Q .245(R_APPEND, R_IAFTER and R_IBEFORE are available only for the DB_RE\
CNO access method)144 408 R .217
(because they each imply that the access method is able to create new keys.)144
420 R .218(This is only true if the)5.218 F
(keys are ordered and independent, record numbers for example.)144 432 Q .214
(The default behavior of the)144 448.8 R F1(put)2.714 E F0 .214
(routines is to enter the new key/data pair)2.714 F 2.713(,r)-.4 G .213
(eplacing any previously)444.034 448.8 R(existing key)144 460.8 Q(.)-.65 E F1
(Put)144 477.6 Q F0 .333(routines return -1 on error \(setting)2.833 F F1
(errno)2.833 E F0 .333(\), 0 on success, and 1 if the R_NOOVER).17 F(WRITE)-.55
E F1(\215ag)2.834 E F0(was set and the key already exists in the \214le.)144
489.6 Q 20.17(seq A)108 506.4 R 2.128(pointer to a routine which is the interf\
ace for sequential retrieval from the database.)4.628 F(The)7.128 E .541
(address and length of the key are returned in the structure referenced by)144
518.4 R F1(key)3.041 E F0 3.041(,a).26 G .542(nd the address and)464.224 518.4
R(length of the data are returned in the structure referenced by)144 530.4 Q F1
(data)2.5 E F0(.).24 E .848(Sequential key/data pair retrieval may begin at an\
y time, and the position of the `)144 547.2 R -2.13(`cursor ')-.74 F 3.347('i)
-.74 G 3.347(sn)519.983 547.2 S(ot)532.22 547.2 Q(af)144 559.2 Q 1.586
(fected by calls to the)-.18 F F1(del)4.087 E F0(,).48 E F1(get)4.087 E F0(,).6
E F1(put)4.087 E F0 4.087(,o).6 G(r)308.444 559.2 Q F1(sync)4.087 E F0 4.087
(routines. Modi\214cations)4.087 F 1.587(to the database during a)4.087 F 1.404
(sequential scan will be re\215ected in the scan, i.e. records inserted behind\
 the cursor will not be)144 571.2 R
(returned while records inserted in front of the cursor will be returned.)144
583.2 Q(The \215ag value)144 600 Q/F2 10/Times-Bold@0 SF(must)2.5 E F0
(be set to one of the following values:)2.5 E(R_CURSOR)144 616.8 Q .493
(The data associated with the speci\214ed key is returned.)180 628.8 R .494
(This dif)5.494 F .494(fers from the)-.18 F F1(get)2.994 E F0(routines)2.994 E
.428(in that it sets the `)180 640.8 R -2.13(`cursor ')-.74 F 2.928('t)-.74 G
2.928(ot)293.108 640.8 S .428(he location of the key as well.)303.816 640.8 R
.427(\(Note, for the DB_BTREE)5.427 F .886(access method, the returned key is \
not necessarily an exact match for the speci\214ed key)180 652.8 R(.)-.65 E
.307(The returned key is the smallest key greater than or equal to the speci\
\214ed key)180 664.8 R 2.806(,p)-.65 G(ermitting)503.33 664.8 Q
(partial key matches and range searches.\))180 676.8 Q(R_FIRST)144 693.6 Q
(The \214rst key/data pair of the database is returned.)180 705.6 Q 197.615
(12, September)72 768 R(2)535 768 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 169.84(DBOPEN\(3\) 1991 DBOPEN\(3\))72 48 R(R_LAST)144
84 Q 1.008(The last key/data pair of the database is returned.)180 96 R 1.009
(\(Applicable only to the DB_BTREE)6.009 F(and DB_RECNO access methods.\))180
108 Q(R_NEXT)144 124.8 Q 1.8(Retrieve the key/data pair immediately after the \
key/data pair most recently retrieved)180 136.8 R .476(using the)180 148.8 R/F1
10/Times-Italic@0 SF(seq)2.976 E F0 2.976(routine. The)2.976 F .476
(cursor is moved to the returned key/data pair)2.976 F 5.477(.I)-.55 G(f)
484.202 148.8 Q F1(\215ag)2.977 E F0 .477(is set to)2.977 F .645
(R_NEXT the \214rst time the)180 160.8 R F1(seq)3.145 E F0 .645
(routine is called, the \214rst key/data pair of the database is)3.145 F
(returned.)180 172.8 Q(R_PREV)144 189.6 Q 1.144(Retrieve the key/data pair imm\
ediately before the key/data pair most recently retrieved)180 201.6 R .477
(using the)180 213.6 R F1(seq)2.977 E F0 2.977(routine. The)2.977 F .476
(cursor is moved to the returned key/data pair)2.977 F 5.476(.I)-.55 G(f)
484.206 213.6 Q F1(\215ag)2.976 E F0 .476(is set to)2.976 F .818
(R_PREV the \214rst time the)180 225.6 R F1(seq)3.318 E F0 .818
(routine is called, the last key/data pair of the database is)3.318 F 2.5
(returned. \(Applicable)180 237.6 R
(only to the DB_BTREE and DB_RECNO access methods.\))2.5 E .873(R_LAST and R_P\
REV are available only for the DB_BTREE and DB_RECNO access methods)144 254.4 R
(because they each imply that the keys have an inherent order which does not c\
hange.)144 266.4 Q F1(Seq)144 283.2 Q F0 .048
(routines return -1 on error \(setting)2.548 F F1(errno)2.548 E F0 .049
(\), 0 on success and 1 if there are no key/data pairs less).17 F .334
(than or greater than the speci\214ed or current key)144 295.2 R 5.334(.I)-.65
G 2.834(ft)346.576 295.2 S .333(he DB_RECNO access method is being used,)355.52
295.2 R 1.562(and if the database \214le is a character special \214le and no \
complete key/data pairs are currently)144 307.2 R(available, the)144 319.2 Q F1
(seq)2.5 E F0(routines return 2.)2.5 E 15.17(sync A)108 336 R .449
(pointer to a routine to \215ush any cached information to disk.)2.949 F .449
(If the database is in memory only)5.449 F(,)-.65 E(the)144 348 Q F1(sync)3.413
E F0 .913(routine has no ef)3.413 F .913(fect and will always succeed.)-.18 F
F1(Sync)5.913 E F0 .913(routines return -1 on error \(setting)3.413 F F1(errno)
144 360 Q F0 2.5(\)a).17 G(nd 0 on success.)176.66 360 Q/F2 9/Times-Bold@0 SF
(KEY/DA)72 376.8 Q 1.332 -.666(TA PA)-.666 H(IRS).666 E F0 .095
(Access to all \214le types is based on key/data pairs.)108 388.8 R .094
(Both keys and data are represented by the following data)5.095 F(structure:)
108 400.8 Q(typedef struct {)108 417.6 Q(void *data;)144 429.6 Q(size_t size;)
144 441.6 Q 2.5(}D)108 453.6 S(BT)122.52 453.6 Q(;)-.55 E
(The elements of the DBT structure are de\214ned as follows:)108 470.4 Q 16.84
(data A)108 487.2 R(pointer to a byte string.)2.5 E 17.95(size The)108 504 R
(length of the byte string.)2.5 E .788(Key and data byte strings may reference\
 strings of essentially unlimited length although any two of them)108 520.8 R
1.101(must \214t into available memory at the same time.)108 532.8 R 1.1
(It should be noted that the access methods provide no)6.101 F
(guarantees about byte string alignment.)108 544.8 Q F2(ERRORS)72 561.6 Q F0
(The)108 573.6 Q F1(dbopen)3.376 E F0 .876(routine may fail and set)3.376 F F1
(errno)3.376 E F0 .876
(for any of the errors speci\214ed for the library routines)3.376 F F1(open)
3.377 E F0(\(2\)).21 E(and)108 585.6 Q F1(malloc)2.5 E F0
(\(3\) or the following:).26 E([EFTYPE])108 602.4 Q 2.5<418c>144 614.4 S
(le is incorrectly formatted.)159.28 614.4 Q([EINV)108 631.2 Q(AL])-1.29 E
2.813(Ap)144 643.2 S .313(arameter has been speci\214ed \(hash function, pad b\
yte etc.\) that is incompatible with the current)159.033 643.2 R(\214le speci\
\214cation or there is a mismatch between the version number of \214le and the\
 software.)144 655.2 Q(The)108 672 Q F1(close)3.455 E F0 .955
(routines may fail and set)3.455 F F1(errno)3.455 E F0 .955
(for any of the errors speci\214ed for the library routines)3.455 F F1(close)
3.455 E F0(\(2\),).18 E F1 -.37(re)108 684 S(ad).37 E F0(\(2\),).71 E F1(write)
2.5 E F0(\(2\),).18 E F1(fr)2.5 E(ee)-.37 E F0(\(3\), or).18 E F1(fsync)2.5 E
F0(\(2\).).26 E(The)108 700.8 Q F1(del)2.959 E F0(,).48 E F1(get)2.959 E F0(,)
.6 E F1(put)2.958 E F0(and)2.958 E F1(seq)2.958 E F0 .458
(routines may fail and set)2.958 F F1(errno)2.958 E F0 .458
(for any of the errors speci\214ed for the library rou-)2.958 F(tines)108 712.8
Q F1 -.37(re)2.5 G(ad).37 E F0(\(2\),).71 E F1(write)2.5 E F0(\(2\),).18 E F1
(fr)2.5 E(ee)-.37 E F0(\(3\) or).18 E F1(malloc)2.5 E F0(\(3\).).26 E(The)108
729.6 Q F1(sync)2.5 E F0(routines may fail and set)2.5 E F1(errno)2.5 E F0
(for any of the errors speci\214ed for the library routine)2.5 E F1(fsync)2.5 E
F0(\(2\).).26 E 197.615(12, September)72 768 R(3)535 768 Q EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 169.84(DBOPEN\(3\) 1991 DBOPEN\(3\))72 48 R/F1 9
/Times-Bold@0 SF(SEE ALSO)72 84 Q/F2 10/Times-Italic@0 SF(btr)108 96 Q(ee)-.37
E F0(\(3\),).18 E F2(hash)2.5 E F0(\(3\),).23 E F2(mpool)2.5 E F0(\(3\),).48 E
F2 -.37(re)2.5 G(cno).37 E F0(\(3\)).17 E F1(BUGS)72 112.8 Q F0 .393
(The typedef DBT is a mnemonic for `)108 124.8 R .394(`data base thang')-.74 F
.394(', and was used because noone could think of a rea-)-.74 F
(sonable name that wasn')108 136.8 Q 2.5(ta)-.18 G(lready used.)216.13 136.8 Q
(None of the access methods provide any form of concurrent access, locking, or\
 transactions.)108 153.6 Q 197.615(12, September)72 768 R(4)535 768 Q EP
%%Trailer
end
%%EOF
